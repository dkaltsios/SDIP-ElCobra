"use strict";
/*
 * SonarQube JavaScript Plugin
 * Copyright (C) 2011-2025 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the Sonar Source-Available License Version 1, as published by SonarSource SA.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the Sonar Source-Available License for more details.
 *
 * You should have received a copy of the Sonar Source-Available License
 * along with this program; if not, see https://sonarsource.com/license/ssal/
 */
// https://sonarsource.github.io/rspec/#/rspec/S4624
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const index_js_1 = require("../helpers/index.js");
const meta_js_1 = require("./meta.js");
exports.rule = {
    meta: (0, index_js_1.generateMeta)(meta_js_1.meta, {
        messages: {
            nestedTemplateLiterals: 'Refactor this code to not use nested template literals.',
        },
    }),
    create(context) {
        return {
            'TemplateLiteral TemplateLiteral': (node) => {
                const ancestors = (0, index_js_1.ancestorsChain)(node, new Set(['TemplateLiteral']));
                const nestingTemplate = ancestors[ancestors.length - 1];
                const { start: nestingStart, end: nestingEnd } = nestingTemplate.loc;
                const { start: nestedStart, end: nestedEnd } = node.loc;
                if (nestedStart.line === nestingStart.line || nestedEnd.line === nestingEnd.line) {
                    context.report({
                        messageId: 'nestedTemplateLiterals',
                        node,
                    });
                }
            },
        };
    },
};

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateMeta = generateMeta;
const index_js_1 = require("./index.js");
function generateMeta(rspecMeta, ruleMeta, hasSecondaries = false) {
    if (rspecMeta.fixable && !ruleMeta?.fixable && !ruleMeta?.hasSuggestions) {
        throw new Error(`Mismatch between RSPEC metadata and implementation for fixable attribute in rule ${rspecMeta.docs.url}`);
    }
    //rspec metadata should overwrite eslint metadata for decorated rules, our titles and docs should be shown instead
    const metadata = {
        ...ruleMeta,
        ...rspecMeta,
    };
    // RSPEC metadata can include fixable also for rules with suggestions, because RSPEC doesn't differentiate between fix
    // and suggestion like ESLint does. That's why we set fixable using ruleMeta
    metadata.fixable = ruleMeta?.fixable;
    if (!metadata.messages) {
        metadata.messages = {};
    }
    metadata.messages.sonarRuntime = '{{sonarRuntimeData}}';
    if (hasSecondaries) {
        const sonarOptions = {
            type: 'string',
            enum: [index_js_1.SONAR_RUNTIME, 'metric'], // 'metric' only used by S3776
        };
        if (metadata.schema) {
            if (Array.isArray(metadata.schema)) {
                metadata.schema = [...metadata.schema, sonarOptions];
            }
            else if (metadata.schema.type === 'array') {
                if (Array.isArray(metadata.schema.items)) {
                    metadata.schema = {
                        ...metadata.schema,
                        items: [...metadata.schema.items, sonarOptions],
                    };
                }
                else {
                    metadata.schema = {
                        ...metadata.schema,
                        items: [metadata.schema.items, sonarOptions],
                    };
                }
            }
        }
        else {
            metadata.schema = [sonarOptions];
        }
    }
    return metadata;
}

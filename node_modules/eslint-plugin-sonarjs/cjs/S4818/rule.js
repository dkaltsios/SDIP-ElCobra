"use strict";
/*
 * SonarQube JavaScript Plugin
 * Copyright (C) 2011-2025 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the Sonar Source-Available License Version 1, as published by SonarSource SA.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the Sonar Source-Available License for more details.
 *
 * You should have received a copy of the Sonar Source-Available License
 * along with this program; if not, see https://sonarsource.com/license/ssal/
 */
// https://sonarsource.github.io/rspec/#/rspec/S4818/javascript
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const index_js_1 = require("../helpers/index.js");
const meta_js_1 = require("./meta.js");
exports.rule = {
    meta: (0, index_js_1.generateMeta)(meta_js_1.meta, {
        messages: {
            safeSocket: 'Make sure that sockets are used safely here.',
        },
    }),
    create(context) {
        return {
            NewExpression: (node) => checkCallExpression(node, context, 'net.Socket'),
            CallExpression: (node) => checkCallExpression(node, context, 'net.createConnection', 'net.connect'),
        };
    },
};
function checkCallExpression(callExpr, context, ...sensitiveFqns) {
    const callFqn = (0, index_js_1.getFullyQualifiedName)(context, callExpr);
    if (sensitiveFqns.some(sensitiveFqn => sensitiveFqn === callFqn)) {
        context.report({ messageId: 'safeSocket', node: callExpr.callee });
    }
}
